MEMORY VE ZİHİNSEL SENTEZLEME EGZERSİZİ - DETAYLI TRANSKRİPT
1. BAŞLANGIÇ AŞAMASI
1.1 Zorluk Seçimi
Kullanıcı zorluk seviyesi seçer (Kolay/Orta/Zor)
Zorluk seviyesi oluşturulacak metinlerin kompleksliğini değiştirecek. Kolay olan ortaokul-lise seviyesinde, orta olan üniversite ve üniversite mezunu seviyesinde, zor olan ise daha zorlayıcı metinler üretecek.
1.2 Metin Hazırlama ve Konu Seçimi (Gemini API)
API Görevi 1: 3 farklı öğretici metin çıkarılabilir kategori oluştur.

`🎯 BUGÜNKÜ KONULAR:

Hangi alanda öğrenmek istiyorsunuz?
[ A ] Psikoloji [ B ] Bilim [ C ] Uzay`

1.3 Metin Hazırlama (Gemini API)
API Görevi 1: Seçilen konuya göre özelleştirilmiş metin üret

Metin Kriterleri:

100-150 kelime arası
Bilgi verici ve öğretici içerik
Anahtar kelime çıkarılabilir yapıda
Konfor alanından çıkarıcı yeni ama aşırı teknik olmayan kavramlar
Zorluk seviyesine uygun karmaşıklık
2. EGZERSİZ AŞAMASI
2.1 Okuma Aşaması (1 Dakika)
⏱️ OKUMA SÜRESİ: 60 SANİYE

📖Konu: İNSAN DAVRANIŞLARI

"Kalabalık etkisi, insanların grup halindeyken bireysel sorumluluklarını azalttığı psikolojik bir olgudur. Bu durumda kişiler, 'başkası yapar' düşüncesiyle hareket etmezler. 1964'te New York'ta Kitty Genovese olayında 38 kişi bir kadının saldırıya uğradığını görmesine rağmen kimse yardım çağırmamıştır. Araştırmacılar bu olayı inceleyerek 'sorumluluk dağılımı' kavramını geliştirmişlerdir. Ne kadar çok kişi olursa, herkesin sorumluluğu o kadar azalır. Günlük hayatta da sık görülür: kalabalık bir yerde düşen birine kimse yardım etmez, ama tek başına olsaydık mutlaka müdahale ederdik."

[60 saniye sonra metin kaybolur]

2.2 Geri Çağırma Aşaması
`💭 HAFIZANIZDAN GERİ ÇAĞIRIN

Metin kayboldu! Şimdi hatırladıklarınızı yazın:

📝 Bu metinden anlayıp öğrendiğiniz şey ne?

🔑 3 anahtar kelime:

_______________`
2.3 Sentez Aşaması
`🧠 ZİHİNSEL SENTEZ

Aşağıdakilerden birini seçin:

BASİTLEŞTİRME ve PEKİŞTİRME
Okuduğunuz bilgiyi, konuyla ilgili hiçbir bilgisi olmayan birine nasıl açıklardınız?

📝 Cevabınızı yazın:

________________________________`

3. DEĞERLENDİRME AŞAMASI
3.1 Karşılaştırma Ekranı
🔍 KARŞILAŞTIRMA

ORİJİNAL METİN: SİZİN ÇIKARIMINIZ:
"Kalabalık etkisi, insanların "Ana fikir: Çok kişi olunca
grup halindeyken bireysel kimse sorumluluk almıyor"
sorumluluklarını azalttığı..."

Anahtar kelimeler:

Kalabalık etkisi

Sorumluluk

Grup davranışı

Basitleştirme: [Kullanıcının basitleştirme yaparak girdiği metin]

3.2 Gemini API Değerlendirme
API Görevi 3: Performans analizi

Geri Çağırma Doğruluğu (1-10): Ana fikri ne kadar yakaladı?
Anahtar Kelime İsabeti (1-10): Kritik kavramları buldu mu?
Sentez Kalitesi (1-10): Bilgiyi kişiselleştirdi/anladı mı?
Genel Öğrenme Skoru (1-10)
3.3 Sonuç Ekranı
`🏆 GÜNLÜK PERFORMANS

📊 SKORLARINIZ:

Geri Çağırma: 8/10
Anahtar Kelime: 7/10
Sentez Kalitesi: 9/10
Genel Öğrenme: 8/10
💡 GERİ BİLDİRİM:
"Kalabalık etkisi konusunu çok iyi kavramışsınız! Ana fikri doğru yakaladınız ve kişisel örneğiniz konuyu pekiştirmiş."`

4. API ÇAĞRI OPTIMIZASYONU
1. Çağrı: 3 konu seçeneği üretimi
2. Çağrı: Seçilen konuda metin üretimi
3. Çağrı: Kullanıcı performansı değerlendirme
Başlamadan önce açıklayıcı sorularını sor.

TEKNİK KARARLARIM:
1. Timer Durumu
Gerçek zamanlı timer - Word Bridge gibi

60 saniyeli geri sayım
Kullanıcı erken bitirmek isterse "İlerle" butonu
Süre bitince otomatik geçiş

2. Metin Kaybolma
Tamamen kaybolsun - hafıza egzersizi mantığına uygun

60 saniye sonra metin DOM'dan kaldırılır
Scroll ile geri görülemez (bu kritik!)

3. UI/UX Akışı
4 adım yapısı:

Adım 1: Zorluk + Konu Seçimi
Adım 2: Okuma (60 saniye timer)
Adım 3: Geri Çağırma + Sentez (combined)
Adım 4: Değerlendirme + Sonuç

4. Veri Yapısı
pythonclass MemorySession(models.Model):
    difficulty = models.CharField(max_length=10)
    selected_topic = models.CharField(max_length=100)
    topic_options = models.JSONField()  # 3 seçenek sakla
    original_text = models.TextField()
    user_recall = models.TextField()
    user_keywords = models.JSONField()  # [kelime1, kelime2, kelime3]
    synthesis_type = models.CharField()  # 'simplify' veya 'connect'
    synthesis_text = models.TextField()
    scores = models.JSONField()  # {recall: 8, keywords: 7, synthesis: 9, overall: 8}
    created_at = models.DateTimeField(auto_now_add=True)
5. API Stratejisi

3 ayrı view - Word Bridge pattern
Ayrı prompts.py - kesinlikle
API çağrı yerleşimi: Her view'da kendi API çağrısı

6. Değerlendirme Sistemi

Skorlama: Progress bar
Anahtar kelime: Benzerlik algoritması (fuzzy matching)
Görselleştirme: 4 ayrı progress bar (recall, keywords, synthesis, overall)

